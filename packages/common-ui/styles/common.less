body {
  --bg-color: #111113;
  --fg-color: #b0b0b0;
  --border-color-default: #66666f;
  --border-color: var(--border-color-default);
  --border-color-input: var(--border-color-default);
  --border-color-highlight: #888890;
  --table-bg-color: #202027;
  --color-sps-sks: #22ff22;
  --color-crit: #ff2222;
  --color-dhit: #ff8800;
  --color-det: #0099ff;
  --color-tnc: #ffff00;
  --color-piety: #ff00ff;
  --stat-mix-primary: 65%;
  --stat-mix-primary-bg: 12%;
  --stat-mix-secondary: 15%;
  --stat-mix-secondary-bg: 6%;
  --materia-overcap-major: #ff0000;
  --materia-overcap: #dd7700;
  --standard-border-default: 1px solid var(--border-color);
  --standard-border: var(--standard-border-default);
  --standard-border-input: 1px solid var(--border-color-input);
  --soft-border: 1px solid var(--border-color);
  --thick-border: 1px solid var(--border-color);
  //--thick-border: 2px solid var(--border-color);
  --selected-outline: 3px solid var(--table-selected-outline-color);
  --stat-color: var(--fg-color);
  --modal-backdrop-color: #7c7cbb33;
  --error-border-color: #9c0000;
  --standard-border-radius: 5px;
  --optional-border-radius: 0;
  --action-col-width: 73px;
  --set-name-col-width: 300px;
  --item-name-col-width: 300px;
  --button-color: var(--bg-color);
  --materia-melded-slot-blend-color: #cccccc;
  --scrollbar-fg: #666675;
  --scrollbar-bg: #444454;
  --stat-tiering-box-mix-color: #fff;
  --faint-border: 1px solid #60606680;
  --plain-link-color: #4f84ff;
  --plain-link-hover-color: #76cfff;
  --edge-padding: 4px;
  --stat-col-width: 40px;
  --chance-stat-col-width: 157px;
  --multi-stat-col-width: 120px;
  --multi-mit-stat-col-width: 170px;
  --hp-stat-col-width: 60px;
  --bottom-flex-basis: 60%;
  --modal-bottom-button-width: 70px;
  --materia-box-shadow-spread: 2px;
  --input-background-color: var(--bg-color);
  --relic-stat-input-background-color: var(--bg-color);
  --relic-stat-input-background-hover-color: #26263f;
  --loading-spinner-color: #fff;
  --button-active-background-color: #121446;
  --button-active-border-color: #ffffff;
  --table-bg-color-selected: #303345;
  --table-bg-color-hover: #3a4055;
  --table-selected-outline-color: #0ba3df;
  --action-button-hover-color: #ddf;
  --button-hover-color: #303649;
  --selection-border-opacity: 80%;
  --sim-color-mix-percent: 70%;
  --shadow-color: black;
  --transition-time: 0.3s;
  --input-transition-time: 0.1s;
  --tiering-color-mix: 2%;
  --abilities-row-height: 20px;
  --button-height: 20px;
  --issue-warning-color: #be5116;
  --issue-error-color: #9c0000;
  --toolbar-button-size: 40px;
  --toolbar-border-radius: 8px;


  &.light-mode {
    --bg-color: #e7dcd9;
    --fg-color: #000000;
    --border-color: #a59083;
    --border-color-highlight: #150f0f;
    --table-bg-color: #fff8f1;
    --table-bg-color-selected: #fdebd3;
    --table-bg-color-hover: #f1d8b8;
    --button-color: var(--table-bg-color);
    --button-hover-color: var(--table-bg-color-hover);
    --input-background-color: #fffafa;
    --materia-melded-slot-blend-color: #666666;
    --scrollbar-fg: #887461;
    --scrollbar-bg: #b7a691;
    --stat-tiering-box-mix-color: #000;
    --plain-link-color: #1a3072;
    --plain-link-hover-color: #2778a9;
    --action-button-hover-color: #833e1d;
    --table-selected-outline-color: #d28996;
    --relic-stat-input-background-color: #efab8a;
    --relic-stat-input-background-hover-color: #ffc2a5;
    --loading-spinner-color: #210;
    --button-active-background-color: #d27d32;
    --button-active-border-color: #734100;
    --sim-color-mix-percent: 50%;
    --shadow-color: #888;
    --tiering-color-mix: 5%;
    --modal-backdrop-color: #372a2733;

    .melded-cell-extra-style {
      background-color: var(--stat-color);
    }

    .gear-sheets-table {
      --button-color: var(--bg-color);
    }
  }

  color: var(--fg-color);
  background-color: var(--bg-color);
  font-family: sans-serif;
  display: flex;
  flex-direction: column;
  min-height: 0;
  height: 100%;
  width: 100%;
  position: fixed;
  overflow-y: hidden;
  margin: 0;

  @media screen and (max-width: 600px) {
    //color: red;
    //width: 80vw;
    //height: 80vh;
    //transform: scale(1.25);
    transform-origin: 0 0;
    --set-name-col-width: 150px;
    //--item-name-col-width: 150px;
    [col-id='mats'] {
      display: none;
    }
  }

  // Main page flex layout stuff
  div#dev-menu-area {
    //flex: 0;
    margin: 5px;
    padding: 5px;
    border: 1px solid var(--border-color);

    button {
      margin: 10px;
    }
  }

  // TODO: this one and the one under the gear sets table have weird alignment
  div#show-hide-menu-button-area {
    z-index: var(--zi-show-hide-menu-button);
    position: absolute;
    left: 5px;
    top: 5px;
    width: 29px;
    height: 29px;

    button#show-hide-menu-button {
      width: 100%;
      height: 100%;
      font-size: 19px;
      display: flex;
      justify-content: center;
      align-items: center;
    }
  }

  div#main-menu-area {
    //border-bottom: 2px solid var(--border-color);
    text-align: center;
    padding-left: 40px;
    padding-right: 40px;
    //margin-bottom: 10px;
    background-color: var(--table-bg-color);
    //background-image: linear-gradient(var(--table-bg-color) 80%, var(--bg-color));
    //border-image: linear-gradient(pink 50%, green);
    //border-bottom-width: 10px;
    .shadow-big;
    margin-bottom: 5px;

    a,
    a:link,
    a:visited,
    a:hover {
      color: var(--fg-color);
      .button-font-style;
      //height: 20px;
      box-sizing: border-box;
      //background-color: var(--fg-color);
      padding: 8px 10px 12px 10px;
      margin: 0;
      text-decoration: none;
      display: inline-block;
      .button-auto-transition;
    }

    a:hover {
      //background-image: linear-gradient(var(--table-bg-color-selected) 80%, var(--bg-color));
      background-color: var(--table-bg-color-selected);
    }

    a.current-page {
      //background-image: linear-gradient(var(--button-hover-color) 80%, var(--bg-color));
      background-color: var(--button-hover-color);
    }

    a:active {
      //background-image: linear-gradient(var(--button-active-background-color) 80%, var(--bg-color));
      background-color: var(--button-active-background-color);
    }
  }

  div#content-area {
    position: relative;
    flex-grow: 1;

    > *:only-child {
      position: absolute;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
    }
  }

  scrollbar-color: var(--scrollbar-fg) var(--scrollbar-bg);

  ::-webkit-scrollbar {
    background-color: var(--scrollbar-bg);
  }

  ::-webkit-scrollbar-thumb {
    background-color: var(--scrollbar-fg);
  }
}

.shadow {
  box-shadow: var(--shadow-color) 0 3px 5px 0;
}

.shadow-big {
  box-shadow: var(--shadow-color) 0 4px 10px 0;
}

.standard-border-radius {
  border-radius: var(--standard-border-radius);
}

.standard-border {
  border: var(--standard-border);
}

.standard-border-input {
  border: var(--standard-border);
}

.standard-paragraph {
  max-width: 900px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 20px;
  padding-right: 20px;
}

.header-area, .gear-sheet-editor-area {
  p {
    .standard-paragraph;
  }
}

.soft-border {
  border: var(--standard-border);
}

.standard-round-border {
  .standard-border-radius;
  .standard-border;
}

.standard-round-border-input {
  .standard-border-radius;
  .standard-border-input;
}

.borderless-button {
  padding: 0 4px 0 4px;
  margin-left: 2px;
  background: none;
  border: none;

  &:hover {
    color: var(--action-button-hover-color);

    svg {
      fill: var(--action-button-hover-color);
    }
  }
}


// Z-indices/gea
body {
  /* Sets table z order needs to be:
  Pinned header cols >

   */

  --zi-sets-table-normal-columns: 70;
  --zi-sets-table-selected-cell: 71;
  --zi-sets-table-pinned-columns: 80;
  --zi-sets-table-selected-highlights: 90;
  --zi-sets-table-dragging-row: 91;
  --zi-sets-table-header-row: 92;
  --zi-sets-table-header-row-pinned: 95;
  --zi-sets-table-buttons-area: 99;
  --zi-midbar: 100;
  --zi-show-hide-menu-button: 120;
  --zi-slot-materia-popup: 150;
  --zi-slot-materia-popup-cell: 180;
  --zi-tiering-expansion: 185;
  --zi-toolbar-popout: 186;
  --zi-loading-blocker: 190;
  --zi-add-sim-dialog: 200;
  --zi-true-modal: 300;
}

.flex-transition {
  //transition: all 2s;
}

.button-transition {
  transition-duration: var(--input-transition-time);
  transition-property: color, background-color, border-color, outline-color;
}

.no-transition {
  transition: none;
}

// This causes the start of a hover to react immediately, but un-hovering is smooth
.button-auto-transition {
  .button-transition;

  &:hover {
    .no-transition;
  }
}

// TODO
div#editor-area {
  text-align: center;
  overflow-y: scroll;
  flex-basis: 60%;
  .flex-transition;
  //flex-shrink: 99;
  flex-grow: 9999;
  min-height: 60%;
  max-height: 100%;
  border-top: 2px solid var(--border-color);
  margin-top: 5px;
  padding-top: 8px;
  padding-bottom: 8px;

  table {
    text-align: left;
  }
}

// TODO
div#main-page-padding {
  flex-grow: 9999999;
}

.table-item-selected-bg {
  background-color: var(--table-bg-color-selected);
}

.table-element-hover-active {
  background-color: var(--table-bg-color-hover);
  .no-transition;
}

table {
  position: relative;
  border: none;
  border-spacing: 0;

  tbody, thead, tfoot {
    text-align: left;
  }

  // In order for ANY hover logic to work, the table itself must have the hoverable class
  // Applies to both direct table elements as well as tbody/thead/etc
  &.hoverable, &.hoverable > * {
    > tr {
      .button-transition;

      > td, th.hoverable {
        .button-transition;
      }

      &.special-row-hoverable > th {
        .button-transition;
      }

      > .hoverable:hover {
        .table-element-hover-active;
      }
    }

    > tr:not(:has(td.hoverable:hover)):hover {
      .no-transition;

      > td {
        .table-element-hover-active;
      }

      > th.hoverable:hover {
        .table-element-hover-active;

        span.header-cell-gear {
          color: var(--action-button-hover-color);
          opacity: unset;
        }
      }

      &.special-row-hoverable {

        &:hover {
          .table-element-hover-active;
        }

        > *:hover {
          .table-element-hover-active;
        }
      }
    }
  }

  tr {
    /*border: 2px solid #666666;*/
    border: 3px solid var(--border-color);
    scroll-margin: 30px;
    position: relative;

    > th, > td {
      background-color: var(--table-bg-color);
    }

    th {
      border-top: var(--thick-border);
      border-bottom: var(--thick-border);

      &:first-child {
        border-left: var(--thick-border);
      }

      &:last-child {
        border-right: var(--thick-border);
      }

      span.header-cell-detail {
        font-weight: normal;
        font-size: 60%;
        opacity: 60%;
        vertical-align: bottom;
        display: inline-block;
      }

      span.header-cell-gear {
        position: absolute;
        right: 2px;
        bottom: 0;
        font-size: 16px;
        opacity: 30%;
      }
    }

    &:first-child {
      // TODO: is this doing anything?
      border-top: var(--standard-border);

      td {
        border-top: var(--thick-border);
      }
    }

    .selection-highlight {
      content: '';
      border-radius: 5px;
      opacity: var(--selection-border-opacity);
      position: absolute;
      --border-style: 2px solid var(--table-selected-outline-color);
      border: var(--border-style);
      left: var(--table-selection-left-pad, 0);
      right: var(--table-selection-right-pad, 0);
      top: 0;
      bottom: 0;
      pointer-events: none;
    }

    // Note: doesn't work on raw text nodes, so tables MUST use a span instead.
    // This is already handled in custom tables.
    td, th {
      position: relative;

      &[is-selected="true"] {
        .table-item-selected-bg;

        > *:first-child::before {
          .selection-highlight;
        }
      }
    }

    &[is-selected="true"] {
      td, th {
        //overflow: visible;
        .table-item-selected-bg;
        --materia-box-shadow-spread: 3px;

        > *:first-child::before {
          .selection-highlight;
          z-index: var(--zi-sets-table-selected-highlights);
          --table-selection-left-pad: -1px;
          border-left: unset;
          border-right: unset;
          border-radius: 0;
        }

        //&:first-child, &[col-id='setname'] {
        &:first-child {
          > *:first-child::before {
            left: 0;
            border-left: var(--border-style);
            border-radius: 5px 0 0 5px;
          }
        }

        &:last-child {
          > *:first-child::before {
            border-right: var(--border-style);
            border-radius: 0 5px 5px 0;
          }
        }
      }

    }


    //td:hover {
    //
    //  background-color: red;
    //}
    th, td {
      padding: 1px 3px 1px 3px;
    }

    td {
      border-left: var(--standard-border);
      border-top: none;
      border-bottom: var(--thick-border);
      border-right: none;
      margin: 0;
      text-overflow: ellipsis;
      overflow: hidden;
      scroll-margin: 20px;


      &:last-child {
        border-right: var(--standard-border);
      }

      &[col-id="actions"] div {
        display: inline-flex;
      }

      &[col-id="setname"] {
        border-left: none;

        > div {
          overflow: hidden;
          text-overflow: ellipsis;
        }

        .gear-set-issue-icon {
          margin-right: 5px;
        }
      }

      &[col-id="icon"] {
        padding: 0;
        margin: 0;
        border-right: none;

        img {
          display: block;
          aspect-ratio: 1;
        }
      }

      &[col-id="itemname"] {
        border-left: none;
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;
      }
    }
  }
}

// Provides the selected outline for table elements

select {
  .button-auto-transition;
  .like-a-button;

  &:hover, &:focus {
    background-color: var(--button-hover-color);
  }
}

.button-font-style {
  font-size: 13.333px;

}

.like-a-button {
  color: var(--fg-color);
  background-color: var(--button-color);
  .standard-border-radius;
  border: var(--standard-border-input);
  .button-font-style;
  height: var(--button-height);
  box-sizing: border-box;
}

button {
  .like-a-button;
  .button-transition;

  &:hover {
    .no-transition;
    background-color: var(--button-hover-color);
  }

  &:active {
    //color: #999999;
    background-color: var(--button-active-background-color);
    border-color: var(--button-active-border-color);
  }
}

.extra-stat-info {
  float: right;
  padding-right: 8px;
}


input {
  &[type="text"],
  &[type="number"] {
    color: var(--fg-color);
    background-color: var(--input-background-color);
    .standard-border-radius;
    border-color: var(--border-color);

    &:invalid {
      border-color: var(--error-border-color);
    }
  }
}

textarea {
  color: var(--fg-color);
  background: var(--table-bg-color);
  border: var(--thick-border);
  .standard-border-radius;
  width: min(600px, 90vw);
  height: 300px;
}

.title-editor {
  margin-bottom: 10px;
  width: 400px;
  font-size: 30px;
  text-align: center;
}

.gear-set-name-editor {
  .title-editor;
}

.sim-name-editor {
  .title-editor;
}

table.gear-plan-table {
  border-collapse: separate;
  border-spacing: 0;
  //overflow-x: scroll;
  // Dumb. Gross. Why can't position: sticky have any reasonable way of working with variable-width columns?
  //background-color: var(--table-bg-color);

  td {
    scroll-margin-top: 68px;
    scroll-margin-bottom: 30px;
    z-index: var(--zi-sets-table-normal-columns);

    &[is-selected="true"] {
      z-index: var(--zi-sets-table-selected-cell);
    }
  }


  tr {
    scroll-margin-top: 60px;
    scroll-margin-bottom: 40px;
    position: relative;

    &:first-child {
      --sets-table-top-padding: 0;
      --sets-table-left-padding: 0;
      position: sticky;
      top: var(--sets-table-top-padding);
      border: var(--thick-border);
      z-index: var(--zi-sets-table-header-row);
      background-color: color-mix(in srgb, var(--table-bg-color) 60%, transparent);

      th {
        height: 54px;
        border-top: var(--thick-border);
        border-bottom: var(--thick-border);

        padding: 0 5px 0 5px;

        &:first-child {
          border-left: var(--thick-border);
          z-index: var(--zi-sets-table-header-row-pinned) !important;
        }

        &:nth-child(2) {
          z-index: var(--zi-sets-table-header-row-pinned) !important;
        }

        //&:last-child {
        //  border-right: var(--thick-border);
        //}
      }
    }

    td:first-child {
      left: 0;
      width: var(--action-col-width);
      min-width: var(--action-col-width);
      max-width: var(--action-col-width);
      outline: inherit;

      button {
        .borderless-button;
        padding: 0 4px 0 4px;
        margin-left: 2px;
        background: none;
        border: none;
        font-size: 13.2px;

        &:hover {
          color: var(--action-button-hover-color);
        }
      }

    }

    td:nth-child(2) {
      // love css - why is there no "just keep this in place"
      // option for stickies?
      left: calc(var(--action-col-width));
      border-right: var(--standard-border);
      white-space: nowrap;
      width: var(--set-name-col-width);
      max-width: var(--set-name-col-width);
      min-width: var(--set-name-col-width);
    }

    td:nth-child(3) {
      border-left: none;

    }

    &[is-selected="true"] {
      td, th {
        //background-color: var(--table-bg-color-selected) !important;
      }
    }

    td, th {
      //background-color: var(--table-bg-color);

      &.stat-col {
        //
        --cell-width: var(--stat-col-width);
        width: var(--cell-width);
        min-width: var(--cell-width);
        max-width: var(--cell-width);

        &.chance-stat-col {
          --cell-width: var(--chance-stat-col-width);
        }

        &.multiplier-stat-col {
          --cell-width: var(--multi-stat-col-width);
        }

        &.multiplier-mit-stat-col {
          --cell-width: var(--multi-mit-stat-col-width);
        }

        &.stat-col-hp {
          --cell-width: var(--hp-stat-col-width);
        }
      }

      //&[is-selected="true"] {
      //  background-color: var(--table-bg-color-selected);
      //}

      &:first-child, &:nth-child(2) {
        box-sizing: border-box;
        position: sticky;
        z-index: var(--zi-sets-table-pinned-columns) !important;
        --table-selection-right-pad: -1px;
      }

      &:first-child {
        left: 0;
        width: var(--action-col-width);
        min-width: var(--action-col-width);
        max-width: var(--action-col-width);
      }

      &:nth-child(2) {
        left: calc(var(--action-col-width));
      }

      &[col-id^="sim-col-"] {
        min-width: 70px;
      }
    }

    &.dragging {
      z-index: var(--zi-sets-table-dragging-row);
      pointer-events: none;

      td {
        border-top: var(--standard-border) inset;
      }
    }
  }

  &.view-only {
    .stat-col {
      text-align: center;
    }

    .extra-stat-info {
      display: none !important;
    }

    --chance-stat-col-width: 40px;
    --multi-stat-col-width: 40px;
    --multi-mit-stat-col-width: 40px;

    &.show-advanced-stats {
      --chance-stat-col-width: 110px;
      --multi-stat-col-width: 70px;
      --multi-mit-stat-col-width: 130px;

      .extra-stat-info {
        display: unset !important;
      }
    }


    td[col-id="actions"] > div {
      display: none;
    }

    div.set-name-desc-holder {
      span {
        display: block;
        text-overflow: ellipsis;
        overflow: hidden;

        &:last-child {
          .text-deemphasise;
        }
      }
    }

    div.chance-stat-display, div.multiplier-stat-display, div.multiplier-mit-stat-display {
      span {
        display: block;

        &:first-child {
          text-align: center;
        }
      }
    }

  }
}

.text-deemphasise {
  opacity: 75%;

}

div.chance-stat-display, div.multiplier-stat-display, div.multiplier-mit-stat-display {
  span:last-child {
    .text-deemphasise;
  }
}

.button-row {
  > * {
    margin: 5px;
  }
}

#content-area {
  text-align: center;

  table {
    //margin: auto;
  }
}


#new-sheet-form, save-as-modal {
  fieldset {
    text-align: center;
    display: inline-grid;
    border: none;
  }
}

#content-area > .my-sheets-section {
  .named-section-content-area {
    width: 600px;

    table.gear-sheets-table {
      overflow: auto;
      padding: 0;
      width: 100%;


      tr {
        height: 23px;
        max-height: 23px;
      }

      tr:first-child {
        th {
          position: sticky;
          top: 0;
          z-index: 1;
        }
      }

      td {
        border: none;
        border-top: var(--standard-border);
      }

      th {
        --thick-border: none;
      }

      .new-sheet-row:hover {
        .svg-glyph {
          fill: var(--action-button-hover-color);
        }
      }

      .new-sheet-row th {
        font-weight: normal;

        i, svg {
          padding-left: 8px;
          padding-right: 8px;
        }
      }

      td[col-id="sheetactions"] {
        width: 50px;
        max-height: 23px;
        height: 23px;

        .svg-glyph {
          font-size: 13.2px;
        }

        i {
          font-size: 14px;
        }

        > div {
          display: inline-block;
          height: 20px;
        }

        button {
          .borderless-button;
          padding: 0;
          margin-left: 0;
        }

        //
        //div {
        //  display: flex;
        //
        //  button {
        //    flex: 1;
        //  }
        //}
      }
    }
  }
}

gear-plan {
  //margin: auto;
  //width: fit-content;
  position: relative;
  // Make the loading spinner happy
  min-width: 120px;
  display: flex;
  flex-direction: column;

  div#editor-area {
  }

  &.loading .hide-when-loading {
    display: none;
  }

  .gear-sheet-table-area {
    //.gear-sheet-table-area-inner {
    //  margin: auto;
    //  width: fit-content;
    //}
    .flex-transition;

    table {
      //margin: auto;
    }

    /*flex-grow: 0;*/
    /*flex-shrink: 9999;*/
    flex-basis: content;
    //overflow: auto;
    min-height: 0;
    flex-shrink: 1;
    flex-grow: 1;
    max-height: 100%;
    width: fit-content;
    max-width: 100%;
    margin: 0 auto 0 auto;
    // TODO: this also causes an ugly empty area to the right.
    // maybe just always display the scrollbar?
    //scrollbar-gutter: stable;
    padding-bottom: 5px;

    .gear-sheet-table-holder-outer {
      //margin-top: 10px;
      //background-color: var(--table-bg-color);
      max-height: calc(100%);
      box-sizing: border-box;
      display: flex;

      .gear-sheet-table-holder {
        scrollbar-gutter: stable both-edges;
        scrollbar-width: thin;
        box-sizing: border-box;
        overflow: auto;
      }
    }

  }


  .gear-sheet-buttons-area {
    left: 0;
    bottom: 0;
    position: sticky;
    z-index: var(--zi-sets-table-buttons-area);
    //background-color: var(--table-bg-color);
    //border: var(--thick-border);
    box-sizing: border-box;
    text-align: left;
    // I hate css
    margin-right: -60px;
    width: min(100%, 100vw);
    pointer-events: none;
    background-color: color-mix(in srgb, var(--bg-color) 80%, transparent);

    border-top: var(--standard-border);

    margin-top: 0;

    padding: 2px 2px 0 2px;

    > * {
      margin-bottom: 2px;
      margin-right: 10px;
      pointer-events: auto;
      box-sizing: border-box;
      display: inline-block;
      padding: 1px 4px 1px 4px;
      vertical-align: top;
    }

  }

  .gear-sheet-midbar-area {
    .shadow-big;
    // want the shadow to appear above
    z-index: var(--zi-midbar);
    border-top: var(--thick-border);

    .gear-sheet-toolbar-holder {
      cursor: row-resize;

      > * > * {
        cursor: auto;
      }
    }

    //margin-top: 5px;
  }

  &.view-only {
    --bottom-flex-basis: 70%;
  }

  .gear-sheet-editor-area {
    flex-basis: var(--bottom-flex-basis);
    flex-shrink: 1;
    flex-grow: 9999;
    //min-height: fit-content;
    height: 60%;
    max-height: 100%;
    border-top: 2px solid var(--border-color);
    padding-left: var(--edge-padding);
    padding-right: var(--edge-padding);
  }
}

#embed-top-level {
  overflow: auto;
  text-align: center;
  min-height: 100%;

  > * {
    min-height: 100%;
    box-sizing: border-box;
  }

  set-totals-display {
    display: block;

    div.stat-total {
      background-color: var(--table-bg-color);
      margin-top: 5px;
      margin-bottom: 0;
      .shadow;
      // Save space by not showing DHT multi since it is fixed
      &.stat-dhit {
        min-width: 52px;

        div.stat-total-lower-right {
          display: none;
        }
      }
    }
  }
}

.gear-sheet-editor-area {
  text-align: center;
  overflow: auto;
  //margin-top: 5px;
  padding-top: 8px;
  padding-bottom: 8px;

  table {
    text-align: left;
    //padding: 5px;
  }
}

table.gear-items-table, table.food-items-table {
  margin-left: auto;
  margin-right: auto;
  .shadow;

  show-hide-button {
    margin-left: 15px;
  }

  tr, td {
    height: 25px;
    box-sizing: border-box;
  }

  img {
    height: 100%;
  }

  max-width: 100%;

  [col-id='itemname'] {
    width: var(--item-name-col-width);
    max-width: var(--item-name-col-width);
    min-width: 100px;
  }

  [col-id='ilvl'] {
    overflow: visible;
  }

  [col-id='icon'] {
    width: 23px;
    max-width: 23px;
    min-width: 23px;
  }

  td[col-id='itemname'] {
    max-width: 1px;
  }

  td[col-id='mats'], td[col-id='wd'] {
    text-align: center;
  }

  tr:last-child {
    td, th {
      border-top: none;
    }
  }

  input[type=number] {
    -moz-appearance: textfield;

    &::-webkit-inner-spin-button, &::-webkit-outer-spin-button {
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
    }
  }

  &.gear-items-edit-table, &.food-items-edit-table {
    tr {
      .item-name-holder-editable, .food-name-holder-editable {
        display: flex;
        flex-direction: row;

        span {
          flex-basis: 1px;
          flex-grow: 99;
          overflow: hidden;
          text-overflow: ellipsis;
        }

        .remove-item-button, .remove-food-button {
          display: none;
        }
      }

      &:hover {
        &[is-selected="true"] {
          .remove-item-button, .remove-food-button {
            background: none;
            display: block;
            .borderless-button;

            padding: 0;
            margin: 0;

            height: min-content;
            width: min-content;

            svg {
              fill: var(--fg-color);
            }

            &:hover {
              fill: var(--action-button-hover-color);

              svg {
                fill: var(--action-button-hover-color);
              }
            }
          }
        }
      }
    }
  }

}

.left-side-gear-table, .right-side-gear-table {
  display: inline-block;
  vertical-align: top;
  //margin-left: 5px;
  //margin-right: 5px;
  & > table.gear-items-table {
    margin-bottom: 10px;

    &:last-child {
      margin-bottom: 0;
    }
  }
}

.gear-table-sides-holder {
  display: flex;
  margin-left: auto;
  margin-right: auto;
  width: fit-content;
  gap: 10px;
  flex-wrap: wrap;
  justify-content: center;
}

.flex-padding-item {
  flex-grow: 0.00001;
}


h1.js-warning {
  color: #ff0000;
  text-decoration: underline 2px double #ff0000;
}


table all-slot-materia-manager {
  //width: max-content;
  //display: table-caption;
  max-width: 100%;
  display: inline-block;
  height: 23px;

  & > span {
    vertical-align: middle;
    display: inline-block;
  }

  &.materia-slot-no-slots, &.materia-slot-no-equip {
    & > span {
      //color: var(--border-color);
      opacity: 50%;
    }
  }
}

slot-materia-manager:hover {
  &:not(:has(slot-materia-popup:hover)) {
    background-color: var(--button-hover-color);
  }
}

slot-materia-manager, single-materia-view-only {
  .standard-border-radius;
  display: inline-block;
  position: relative;
  margin-right: 5px;
  height: fit-content;
  width: 95px;
  font-weight: normal;
  vertical-align: middle;
  box-sizing: border-box;

  --image-size: 18px;

  div.materia-image-holder {
    overflow: clip;
    width: var(--image-size);
    height: var(--image-size);
    padding: 0;
    margin: 0;
    border: 2px #3c623c solid;
    border-radius: 100%;
    display: inline-block;
    vertical-align: middle;
  }

  &.materia-slot-overmeld {
    div.materia-image-holder {
      border: 2px #397e86 solid;
    }
  }

  img {
    width: 100%;
    height: 100%;
    display: block;
  }

  &.materia-manager-active {
    box-shadow: 0 0 2px 2px var(--table-selected-outline-color) inset;
  }

  & > span {
    vertical-align: middle;
    display: inline-block;
  }

  & > span:first-of-type {
    padding-left: 3px;
  }

  &.materia-overcap > span {
    color: var(--materia-overcap);

    //div.materia-image-holder {
    //  border-color: var(--materia-overcap);
    //}
  }

  &.materia-overcap-major > span {
    color: var(--materia-overcap-major);

    //div.materia-image-holder {
    //  border-color: var(--materia-overcap-major);
    //}
  }
}

slot-materia-popup {
  position: absolute;
  z-index: var(--zi-slot-materia-popup);
  left: 0;
  box-shadow: var(--shadow-color) 0 5px 10px 0;

  > table {
    border-radius: 0 !important;
    padding: 0 !important;
  }

  th {
    border-top: var(--standard-border) !important;
    text-align: center;
  }

  td {
    width: fit-content !important;
    height: fit-content !important;
    padding: 0 !important;
    z-index: var(--zi-slot-materia-popup-cell);

    img {
      width: 40px;
      height: 40px;
      display: block;
    }

    &[is-selected="true"] {
      z-index: 181;
    }

    &:first-child {
      text-align: center;
      padding: 4px !important;
    }

    &:hover img {
      filter: brightness(1.4);
      //border: 2px solid var(--table-bg-color-hover);
    }
  }

  .materia-picker-remove {
    text-align: center;
    font-weight: bold;

    svg {
      fill: #831818;
    }

    &:hover {
      svg {
        fill: red;
      }
    }
  }
}

sim-result-display {
  display: inline-block;
  width: 100%;
}


td.sim-column-valid {
  color: color-mix(in srgb, currentColor var(--sim-color-mix-percent), color-mix(in hsl, #00ff00 var(--sim-result-relative, 50%), #ff0000));

  &.sim-column-best {
    font-weight: bold;
  }
}

add-sim-dialog {
  .modal-content-area {
    display: flex;
    flex-direction: column;
  }

  form {
    display: contents;
  }

  .table-holder {
    background-color: var(--table-bg-color);
    border-radius: var(--optional-border-radius);
    flex-basis: 300px;
    overflow-y: auto;

    table {
      margin-left: 0;
      margin-right: 0;
      max-width: 100%;
      width: 100%;
    }
  }


  .add-sim-lower-area {
    flex-basis: 150px;
    display: flex;
    flex-direction: column;
    padding-top: 20px;
    min-width: 400px;
    min-height: 100px;
    max-width: min-content;
    white-space: pre-wrap;
    overflow-y: auto;

    .add-sim-description {
      flex-grow: 1;

      &.no-desc {
        opacity: 50%;
      }
    }

    .sim-contact-info-holder {
      //flex-grow: 0;
      flex-basis: fit-content;
    }
  }

}

#sim-config-area-outer {
  margin: auto;
  width: fit-content;

  > input, > button {
    .shadow;
  }

  .sim-name-editor {
    display: block;
    margin: auto auto 10px;
  }

  .sim-config-area-inner {
    padding: 10px;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    width: max-content;
    max-width: calc(100% - 10px);
    margin-left: auto;
    margin-right: auto;

    > .named-section {
      .named-section-standard;
      width: 100%;

      max-width: unset;

      label[for='cycle-total-time'] {
        margin-right: 10px;
      }
    }

    > * {
      margin-top: 10px;
    }

    .labeled-item {
      label {
        display: block;
      }
    }
  }
}

gear-set-editor {
  div.gear-set-editor-button-area {
    width: 100%;
    text-align: center;

    > * {
      .shadow;
    }

    > .issues-button {
      min-width: 84px;
    }
  }

  > * {
    margin-bottom: 10px;
  }
}

import-set-area, import-sheet-area {

  #set-import-textarea-holder {
    .standard-border-radius;
    width: fit-content;
    height: fit-content;
    position: relative;
    margin: auto;

  }
}

import-set-dialog {
  .modal-content-area {
    width: min-content;
  }

  #set-import-textarea-holder {
    position: relative;
  }

  loading-blocker {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;

    .loading-spinner {
      position: relative;
      top: calc(50% - 50px);
    }
  }
}

div.gear-sheet-toolbar-holder {
  min-height: 15px;
  position: relative;
  padding-left: 8px;
  padding-right: 8px;

  .drag-indicator {
    content: '≡';
    position: absolute;
    top: 0;
    bottom: 0;
    height: fit-content;
    margin: auto 1px auto 1px;
  }

  &::before {
    .drag-indicator;
    left: 0;
  }

  &::after {
    .drag-indicator;
    right: 0;
  }

}

.load-bar-outer {
  border-style: solid;
  border-width: 1px;
  border-color: var(--border-color-highlight);
  border-radius: 4px;
}

.load-bar-inner {
  background-color: var(--border-color-highlight);
  border-radius: 3px;
}

.meld-solver-set {
  float: left;
  font-weight: bold;
  text-decoration: underline;
}

.meld-solver-area {
  white-space: pre-wrap;
}

.meld-solver-settings {

  float: left;
  display: flex;
  flex-direction: column;
  border-width: 1px;
  border-color: #00ff00;

  li {
    margin: 5px;
    list-style-type: none;
    float: left;

    .meld-solver-target-gcd-input {
      max-width: 30px;
      border: var(--faint-border);
      float: left;
    }

    .meld-solver-target-gcd-input:disabled {
      border: var(--faint-border);
      background-color: #333339;
      color: #909090;
    }

    select.meld-solver-sim-dropdown {
      float: left;
      max-width: fit-content;
      width: 100%;

      option {
        padding: 5px;
      }
    }
  }

  button {
    margin: 5px;
    border-width: 1px;
    border-color: #909090;
    float: left;
    height: 100%;
  }
}

.gear-set-editor-toolbar {

  display: flex;
  flex-wrap: wrap-reverse;
  justify-content: center;

  > * {
    .shadow;
  }

  .toolbar-buttons-area {
    display: inline-flex;
    flex-direction: row;
    justify-content: space-between;
    margin-right: -3px;
    align-items: center;
    gap: 10px;
    position: relative;

    .popout-area {
      position: absolute;
      top: calc(100% + 8px);
      background: var(--table-bg-color);
      .standard-round-border;
      width: max-content;
      // TODO: make the shadow not extend down as far
      box-shadow: var(--shadow-color) 0 12px 10px 0;
      z-index: var(--zi-toolbar-popout);

      > * {
        // TODO: this isn't working right
        // This is supposed to push the element to the right if it starts to hang off the left of the screen.
        // The element can still go off the left.
        position: sticky;
      }
    }

    > button {
      height: var(--toolbar-button-size);
      border-radius: var(--toolbar-border-radius);
      display: flex;
      justify-content: center;
      padding: 2px;
      position: relative;

      &.big-text-btn {
        font-size: 30px;
        width: var(--toolbar-button-size);
        line-height: 0;
      }

      &.popout-button {
        padding-left: 5px;
        padding-right: 5px;

        &:active {
          border-color: #0000;
        }

        &[popout-active="true"] {
          background-color: var(--button-active-background-color);
        }
      }

      svg {
        margin: auto;
        width: 100%;
        height: 100%;
      }
    }

    //@media screen and (max-width: 630px) {
    //  flex-direction: column;
    //  gap: 2px;
    //  justify-content: center;
    //  align-items: center;
    //  border-radius: 4px;
    //  --toolbar-button-size: 20px;
    //  button.big-text-btn {
    //    font-size: 24px;
    //  }
    //}
  }
}

set-view-toolbar {
  display: contents;
}

div.gear-set-editor-toolbar, set-view-toolbar {

  width: fit-content;
  margin: auto;

  > * {
    box-sizing: border-box;
    min-height: 50px;
    .standard-round-border;
    display: inline-block;
    vertical-align: top;
    margin: 5px;
    background-color: var(--button-color);
    @media screen and (max-width: 530px) {
      margin-left: 2px;
      margin-right: 2px;
    }
  }

  .button-font-style;


  div.ilvl-picker-area {
    ilvl-range-picker {
      //.like-a-button;
      display: block;
      text-align: right;
      margin: 4px 0 4px 0;

      span {
        font-size: 13.333px;
        padding: 5px;
      }

      input {
        border: var(--faint-border);
        padding: 0 0 0 0;
        background: none;
        width: 30px;
        text-align: center;
        margin-right: 2px;
      }
    }
  }

  materia-priority-picker {
    width: fit-content;

    text-align: left;

    div.labeled-checkbox {
      float: right;
    }

    > span {
      display: inline-block;
    }

    > * {
      margin: 2px;
    }

    .labeled-checkbox {
      display: inline-block;
    }

    .min-gcd-input {
      max-width: 30px;
      border: var(--faint-border);
    }

    materia-drag-order {
      display: inline-block;

      materia-dragger {
        display: inline-block;
        cursor: grab;
        user-select: none;

        &:hover {
          .materia-dragger-inner {
            border-color: var(--border-color-highlight);
          }
        }

        .materia-dragger-inner {
          .standard-round-border;
          font-size: 12.5px;
          position: relative;
          // These need to not be the real drag target
          pointer-events: none;
          padding: 1px;
          width: 25px;
          text-align: center;

          span {
            margin: auto -5px auto -5px;
          }
        }
      }

      // When a drag is active, THIS needs to be the target of pointer events so that
      // the math works right.
    }
  }

  div.stat-tier-display {
    @media screen and (max-width: 530px) {
      border: none;
      height: unset;
      min-height: unset;
      //scale: 1;
      padding: 0;
      margin: 0;

      .single-stat-tier-display {
        min-width: unset;
        --inner-padding: 2px;
      }
    }

  }

  div.single-stat-tier-display {
    .standard-round-border;
    position: relative;
    padding: 2px;
    margin: 5px 2px 5px 2px;
    display: inline-block;
    width: fit-content;
    min-width: 52px;
    transition: box-shadow var(--transition-time) linear;

    div.single-stat-tier-display-upper {
      display: block;
      transition: all var(--transition-time) linear;
    }

    border-color: color-mix(in srgb, var(--stat-color) 20%, var(--border-color));
    background-color: color-mix(in srgb, var(--stat-color) var(--tiering-color-mix), var(--table-bg-color));

    .number-format-perfect {
      > div.single-stat-tier-display-upper {
        color: color-mix(in srgb, var(--stat-color) 30%, var(--stat-tiering-box-mix-color));
      }

      > div.single-stat-tier-display-lower-left {
        color: color-mix(in srgb, var(--stat-color) 70%, var(--stat-tiering-box-mix-color));
        line-height: 0;
        //float: left;
      }
    }

    &.stat-tiering-perfect {
      .number-format-perfect;

      //border-color: color-mix(in srgb, var(--stat-color) 60%, var(--border-color));
      box-shadow: 0 0 5px -1px inset color-mix(in srgb, var(--stat-color) 50%, var(--border-color));
      //border-width: 2px;
    }

    --inner-padding: 3px;

    div.single-stat-tier-display-lower-left {
      display: inline-block;
      padding-left: var(--inner-padding);
      padding-right: var(--inner-padding);
      //float: left;
    }

    div.single-stat-tier-display-lower-right {
      display: inline-block;
      padding-left: var(--inner-padding);
      padding-right: var(--inner-padding);
      //float: right;
    }

    div.single-stat-tier-display-expansion {
      .single-stat-tier-display-expansion-item {
        margin-top: 10px;
        margin-bottom: 10px;

        &.stat-tiering-perfect {
          .number-format-perfect;
        }
      }

      .standard-round-border;
      z-index: var(--zi-tiering-expansion);
      box-shadow: var(--shadow-color) 0 4px 10px 0;
      position: absolute;
      left: 0;
      right: 0;
      top: 130%;
      border-color: color-mix(in srgb, var(--stat-color) 20%, var(--border-color));
      background-color: color-mix(in srgb, var(--stat-color) var(--tiering-color-mix), var(--table-bg-color));
      overflow: hidden;

      .single-stat-tier-display-separator-holder {
        position: relative;

        .single-stat-tier-display-separator-inner {
          //position: absolute;
          height: 10px;
          left: 0;
          right: 0;
          z-index: -1;
          top: -5px;
          background-color: var(--bg-color);
          //position: absolute;
          //height: 1000px;
          //left: 0;
          //right: 0;
          //z-index: -1;
          //top: -5px;
          //filter: saturate(50%);
          //background-color: color-mix(in srgb, var(--stat-color) calc(var(--tiering-color-mix) / 3), var(--table-bg-color));
        }
      }
    }
  }
}

set-view-toolbar {
  set-totals-display {
    border: none;
    pointer-events: none;
    background: none;

    div.stat-total {
      .shadow;
      background-color: var(--table-bg-color);
    }
  }
}

set-totals-display {
  //div.stat-tier-display {
  //@media screen and (max-width: 530px) {
  //  border: none;
  //  height: unset;
  //  min-height: unset;
  //  //scale: 1;
  //  padding: 0;
  //  margin: 0;
  //
  //  .single-stat-tier-display {
  //    min-width: unset;
  //    --inner-padding: 2px;
  //  }
  //}


  //}

  div.stat-total {
    .standard-round-border;
    padding: 2px;
    margin: 5px 2px 5px 2px;
    display: inline-block;
    width: fit-content;
    min-width: 50px;

    div.single-stat-tier-display-upper {
      display: block;
    }

    border-color: color-mix(in srgb, var(--stat-color) 20%, var(--border-color));

    --inner-padding: 3px;

    div.stat-total-lower-left {
      display: inline-block;
      padding-left: var(--inner-padding);
      padding-right: var(--inner-padding);
      //float: left;
    }

    div.stat-total-lower-right {
      display: inline-block;
      padding-left: var(--inner-padding);
      padding-right: var(--inner-padding);
      //float: right;
    }

    &.stat-total-wide {
      min-width: 90px;
    }

    &.stat-total-narrow {
      min-width: 52px;
    }
  }
}


div.labeled-checkbox {
  label {
    user-select: none;
  }
}

.show-hide-parent {
  .show-hide-button {
    display: none;
  }

  @media screen and (max-width: 800px) {
    &:not(.showing) {
      > * {
        display: none;
      }
    }

    .show-hide-button {
      display: revert;
    }
  }
}

input.gear-items-table-relic-stat-input, select.gear-items-table-relic-stat-input {
  //border: var(--soft-border);
  border: 2px solid transparent;
  padding: 0 0 0 0;
  background: var(--relic-stat-input-background-color);
  box-sizing: border-box;
  //margin: 1px;
  width: 100%;
  text-align: center;

  &.relic-validation-failed {
    border: 2px solid red;
  }

  &:hover, &:active, &:focus {
    background: var(--relic-stat-input-background-hover-color);
  }
}

select.gear-items-table-relic-stat-input {
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
}

body:has(> .backdrop-active) > *:not(.backdrop-active) {
  filter: saturate(20%) blur(2px);
}

.special-row-holder {
  > * {
    float: right;

    &:first-child {
      float: unset;
    }
  }
}

show-hide-button {
  transition: transform 0.2s;
  transform: rotate(0);

  &.hidden {
    transform: rotate(90deg);
  }
}

.modal-dialog {
  position: absolute;
  margin: 0;
  bottom: 0;
  top: 0;
  left: 0;
  right: 0;
  z-index: var(--zi-true-modal);
  display: flex;
  background-color: var(--modal-backdrop-color);
  //transition: background-color 2s linear;

  //&.backdrop-active {
  //}

  .modal-inner {
    max-height: 95vh;
    max-width: 95vw;
    display: flex;
    flex-direction: column;

    .modal-header {
      margin-top: 10px;
      margin-left: 40px;
      margin-right: 40px;
    }

    .modal-content-area {
      overflow: auto;
      margin-bottom: 10px;
    }

    .modal-close-button {
      position: absolute;
      right: 10px;
      top: 10px;
      font-size: 30px;
      .borderless-button;
    }
  }

  > div {
    margin: auto;
    position: relative;
    background-color: var(--table-bg-color);
    .standard-round-border;
    // TODO: ?
    border-radius: var(10px);
    .shadow-big;
    text-align: center;
    padding: 10px;

    //> button {
    //  display: block;
    //  margin: 5px auto auto auto;
    //}

    //loading-blocker {
    //  position: unset;
    //  background-color: unset;
    //}

    input[type='text'] {
      width: 300px;
    }
  }

  div.lower-button-area {
    > button {
      display: inline-block;
      margin: 5px 5px 5px 5px;
      min-width: var(--modal-bottom-button-width);
    }
  }

}

rename-dialog {
  .modal-dialog;

  textarea {
    margin: 10px;
    resize: none;
  }

  .modal-inner > * {
    display: block;
    margin-left: auto;
    margin-right: auto;
  }
}

shortlink-modal {
  .modal-dialog;
}

food-stat-bonus {
  display: inline;

  span {
    padding-right: var(--food-stat-padding, 5px);
  }

  span:last-child {
    float: right;
    padding-right: 0;
  }
}

table.food-items-table {
  max-width: 100%;

  .food-stat-col {
    --food-stat-col-width: max-content;
    min-width: var(--food-stat-col-width);
    max-width: var(--food-stat-col-width);
    width: var(--food-stat-col-width);
    box-sizing: content-box;
  }

  [col-id='itemname'] {
    //max-width: fit-content;
    width: 300px;
    min-width: 100px;
    max-width: var(--item-name-col-width);

    div {
      overflow: hidden;
      text-overflow: ellipsis;
      width: 100%;
    }
  }

  [col-id='icon'] {
    height: unset;

    img {
      height: 27px;
    }
  }

  .food-stat-narrow {
    display: none;
  }

  @media screen and (max-width: 900px) {
    food-stat-bonus {
      span {
        display: block;
      }
    }

    .food-stat-col {
      --food-stat-col-width: fit-content !important;
      --food-stat-padding: 0;
      //width: 50px;
    }
  }
  @media screen and (max-width: 1045px) {
    .food-stat-narrow {
      display: unset;
    }

    .food-stat-wide {
      display: none;
    }

    .food-stat-col {
      //--food-stat-col-width: 100px;
    }

  }

}

.round-table {

  tbody {
    tr:first-child {
      border-top-left-radius: var(--standard-border-radius);
      border-top-right-radius: var(--standard-border-radius);

      td:first-child, th:first-child {
        border-top-left-radius: var(--standard-border-radius);
      }

      td:last-child, th:last-child {
        border-top-right-radius: var(--standard-border-radius);
      }
    }

    tr:last-child {
      border-bottom-left-radius: var(--standard-border-radius);
      border-bottom-right-radius: var(--standard-border-radius);

      td:first-child, th:first-child {
        border-bottom-left-radius: var(--standard-border-radius);
      }

      td:last-child, th:last-child {
        border-bottom-right-radius: var(--standard-border-radius);
      }
    }
  }
}

gear-set-viewer {
  padding-left: 5px;
  padding-right: 5px;
  //margin-left: 5px;
  //margin-right: 5px;
  //.left-side-gear-table, .right-side-gear-table {
  //  table {
  //    margin-left: 5px !important;
  //    margin-right: 5px !important;
  //  }
  //}
  display: block;
  --standard-border-radius: 10px;

  > h1 {
    margin-top: 0;

    svg {
      padding-left: 10px;
    }
  }

  & > * {
    margin-bottom: 10px;
  }

  materia-totals-display, .gear-items-view-table, .food-view-table {
    .shadow;
  }

  all-slot-materia-manager {
    pointer-events: none;
  }

  materia-totals-display {
    .standard-round-border;
    background-color: var(--table-bg-color);
    padding: 5px;
    display: grid;
    grid-template-columns: repeat(var(--materia-total-cols, 4), auto);
    text-align: left;
    margin-left: auto;
    margin-right: auto;
    max-width: 556px;
    @media screen and (max-width: 550px) {
      --materia-total-cols: 3;
    }
    @media screen and (max-width: 400px) {
      --materia-total-cols: 2;
    }

    span.materia-totals-label {
      padding-left: 40px;
    }

    materia-count-display {
      display: inline-block;

      .materia-count-quantity {
        text-align: right;
        width: 30px;
        display: inline-block;
        margin-right: 3px;
      }

      single-materia-view-only {
        width: fit-content;
        //padding-left: 5px;
        //padding-right: 5px;
      }
    }
  }


  table {
    //.standard-round-border;
    //.standard-border;
    //padding: 0 !important;
    //margin: 5px !important;
    tr:last-child {
      //border: none !important;
      //.standard-border !important;
      td, th {
        border-top: none;
        //border: none !important;
        //.standard-border;
      }
    }
  }

  .gear-items-view-table, .food-view-table {
    //.round-table;
    //--standard-border: none;
    //--thick-border: none;
    background-color: var(--table-bg-color);
    border: var(--standard-border);
    border-spacing: 5px;
    border-radius: var(--standard-border-radius);
    --item-name-col-width: 265px;
    // Weird, requires this to make the colspan=9999 not cause horizontal scrollbar
    overflow: hidden;

    > * {
      --standard-border: none;
      --thick-border: none;
      background: none;
    }

    td, th {
      border-style: none;
      background: none;
    }

    .stat-cell {
      border-radius: 5px;

      &.primary {
        //box-shadow: 0 0 3px 3px var(--stat-color) inset;
      }

      &.secondary {
        //box-shadow: 0 0 3px 3px var(--stat-color) inset;
      }
    }

    .gear-items-view-item-header {
      display: flex;
      flex-direction: row;
      gap: 10px;
      align-items: center;

      > * {
        display: inline-block;
      }

      > button {
        .invert-input-colors;
      }
    }

    //.item-name-holder-view {
    //  display: flex;
    //  flex-direction: row;
    //
    //  span.item-name {
    //    flex-basis: 1px;
    //    flex-grow: 99;
    //    overflow: hidden;
    //    text-overflow: ellipsis;
    //  }
    //
    //  span.item-alts {
    //    flex-basis: fit-content;
    //    flex-shrink: 0;
    //    flex-grow: 0;
    //  }
    //}
  }

  .food-view-table {
    td.food-stat-col {
      --standard-border: 1px solid color-mix(in srgb, var(--stat-color) 10%, var(--border-color));
      border: var(--standard-border);
      border-top: var(--standard-border) !important;
      border-radius: 5px;

      &.primary {
        --standard-border: 1px solid color-mix(in srgb, var(--stat-color) 50%, var(--border-color));
      }
    }
  }

  //.weapon-table,  .food-items-table {
  //  max-width: calc(100% - 10px);
  //  //padding-left: 5px;
  //  //padding-right: 5px;
  //}
  //
  //materia-totals-display {
  //  width: calc(100% - 10px);
  //  margin-left: 5px;
  //  margin-right: 5px;
  //};
}

// Stat-related stuff

.stat-cell {
  text-align: center;
  text-overflow: clip;

  span {
    padding: 0 1px 0 0;
  }
}

.color-stat-column {
  &.primary {
    color: color-mix(in srgb, var(--stat-color) var(--stat-mix-primary), var(--fg-color));
    background-color: color-mix(in srgb, var(--stat-color) var(--stat-mix-primary-bg), var(--table-bg-color));
  }

  &.secondary {
    color: color-mix(in srgb, var(--stat-color) var(--stat-mix-secondary), var(--fg-color));
    background-color: color-mix(in srgb, var(--stat-color) var(--stat-mix-secondary-bg), var(--table-bg-color));
  }
}

.stat-crit {
  --stat-color: var(--color-crit);
  .color-stat-column;
}

.stat-dhit {
  --stat-color: var(--color-dhit);
  .color-stat-column;
}

.stat-determination {
  --stat-color: var(--color-det);
  .color-stat-column;
}

.stat-tenacity {
  --stat-color: var(--color-tnc);
  .color-stat-column;
}

.stat-spellspeed, .stat-skillspeed {
  --stat-color: var(--color-sps-sks);
  .color-stat-column;
}

.stat-piety {
  --stat-color: var(--color-piety);
  .color-stat-column;
}

td.stat-melded, td.stat-melded-overcapped, td.stat-melded-overcapped-major, td.stat-synced-down {
  //box-shadow: 0 0 4px 2px rgb(from color-mix(in srgb, var(--stat-color) 40%, var(--materia-melded-slot-blend-color)) r g b / 80%) inset;
  box-shadow: 0 0 2px var(--materia-box-shadow-spread) color-mix(in srgb, color-mix(in srgb, var(--stat-color) 40%, var(--materia-melded-slot-blend-color)), transparent 35%) inset;
  --selection-border-opacity: 30%;
}

td.stat-zero {
  color: color-mix(in srgb, var(--table-bg-color) 75%, var(--fg-color));
}

td.primary {
  font-weight: bold;
}

loading-blocker {
  display: block;

  &.with-bg {
    background-color: var(--modal-backdrop-color);
  }

  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;

  z-index: var(--zi-loading-blocker);

  // Loading spinner stuff
  div.loading-spinner {

    margin: auto;
    width: 100px;
    height: 100px;
    padding-left: 10px;
    box-sizing: border-box;

    div {
      transform-origin: 40px 40px;
      animation: spin-anim-control linear infinite;

      &:after {
        content: "";
        display: block;
        position: absolute;
        top: 3px;
        left: 37px;
        width: 6px;
        height: 18px;
        border-radius: 20%;
        background: var(--loading-spinner-color);
      }
    }
  }
}

@keyframes spin-anim-control {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

div#welcome-message {
  width: 840px;
  max-width: 100%;
  box-sizing: border-box;
  .top-level-widget;
  padding: 10px 50px 0;
  height: 100%;

  button {
    display: block;
    margin: 5px auto 20px auto;
    font-size: 30px;
    height: fit-content;
  }

  h1 {
    text-align: center;
    margin: auto;
  }

  li {
    margin-top: 4px;
    margin-bottom: 4px;
  }

  a:link, a:visited, a:active {
    color: var(--plain-link-color);
  }

  a:hover {
    color: var(--plain-link-hover-color);
  }
}

a:link, a:visited, a:active {
  color: var(--fg-color);
}

a:hover {
  color: var(--fg-color);
}

div.vertical-spacer {
  height: 10px;
}

span.like-a-button {
  display: inline-block;
  padding: var(--button-padding);
  vertical-align: top;
}

// Vertically center
div.like-a-button > span {
  line-height: 0;
  display: block;
  position: relative;
  top: 50%;
}

.drag-handle {
  cursor: grab;
  touch-action: none;
}

buff-settings-area {
  .standard-round-border;

  table {
    border: none;
    border-collapse: separate;
    border-spacing: 0 8px;

    tr {
      background-color: transparent;
      //border-bottom: var(--standard-border);

      td {
        border: none;
        border-top: var(--standard-border);

        &:last-child {
          border-right: none;
        }
      }
    }

    tr:last-child {
      border-bottom: none;
    }
  }
}

.cycle-sim-results-table {
  width: 100%;

  > table {
    margin: auto;

    .round-table;
    .shadow-big;

  }

  .main-results-table {
    margin-bottom: 20px;

    td {
      padding-left: 15px;
      padding-right: 15px;

      &[col-id='value'] {
        text-align: right;
      }
    }
  }

  .abilities-used-table {

    .ability-cell {
      height: 100%;
      max-height: var(--abilities-row-height);
      display: flex;
      align-items: center;

      .ffxiv-ability-icon {
        max-height: 100%;
        display: block;
        aspect-ratio: 1;
      }

      .ability-name {
        overflow-x: hidden;
        text-overflow: ellipsis;
        line-height: initial;
        flex-shrink: 1;
        flex-grow: 1;
      }
    }

    th {
      text-align: center;
    }

    td {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      line-height: 1px;
      height: var(--abilities-row-height);

      &[col-id='time'] {
        text-align: right;
      }

      &[col-id='buffs'] {
        padding-top: 0;

        .active-buffs-list {
          height: 100%;
          width: 100%;
          display: inline-flex;
          align-items: center;
          max-height: var(--abilities-row-height);

          img {
            height: 100%;
            flex-shrink: 0;
            padding-right: 2px;
          }

          span {
            flex-shrink: 1;
            display: block;
            min-width: 1px;
            overflow-x: hidden;
            text-overflow: ellipsis;
            line-height: var(--abilities-row-height);
          }
        }
      }
    }

    td, th {
      &[col-id='time'] {
        width: 75px;
        max-width: 75px;
      }

      &[col-id='ability'] {
        min-width: 150px;
        max-width: 400px;
      }

      &[col-id='unbuffed-pot'] {
        width: 40px;
        max-width: 40px;
      }

      &[col-id='expected-damage'] {
        width: 100px;
        max-width: 100px;
      }

      &[col-id='buffs'] {
        width: 400px;
        max-width: 400px;
      }
    }
  }
}


div.weapon-ilvl-bypass-setting {

  div {
    float: right;
    //display: block;
    margin-right: 5px;
    //margin-left: auto;

    label {
      font-weight: normal;
    }
  }

}

fieldset {
  border: none;
}

.export-modal-dialog {
  fieldset {
    text-align: left;
  }

  .labeled-radio-button {
    display: inline-block;
    padding-right: 10px;
    padding-bottom: 8px;
  }

  > div {
    width: min-content;
  }
}

// TODO: how to do FA fallback to emoji if font blocked?
//i.fa-copy::before {
//  content: '📃';
//}


sheet-export-modal, set-export-modal {
  textarea {
    height: 200px;
  }

  sim-export-chooser {
    width: fit-content;
    display: block;
    margin: auto;

    .sim-export-chooser-inner {
      max-height: 300px;
      overflow-y: auto;
      text-align: left;
    }
  }
}

rename-dialog {
  form {
    width: min-content;
  }
}

.ffxiv-job-icon {
  max-height: 100%;
  display: block;
  aspect-ratio: 1;
}

.svg-glyph {
  height: 1em;
  width: 1em;
  display: inline;
  vertical-align: -.125em;
  fill: var(--fg-color);

  &.svg-line {
    fill: none;
    stroke: var(--fg-color);
  }
}

*:focus-visible {
  outline: initial;
  box-shadow: 0 0 2px 2px var(--table-selected-outline-color);
}

// Cell for when a relic row is selected, but the cell's stat is "excluded" i.e. dhit on tank/healer
.relic-stat-excluded {
  width: 100%;
  height: 100%;
}


body.modern {
  --border-color: #0000000;
  --table-extra-padding: 10px;
  --optional-border-radius: 10px;
  //--item-name-col-width: 250px;
  //--button-height: 25px;
  table {

    border-radius: 10px;
    padding: var(--table-extra-padding);
    background-color: var(--table-bg-color);

    &.gear-plan-table {
      border-radius: 0;
      --table-extra-padding: 0px;

      tr {
        td[col-id="actions"] {
          button {
            opacity: 10%;
          }
        }
      }

      tr:hover, tr[is-selected="true"], tr.dragging {
        td[col-id="actions"] {
          button {
            opacity: 80%;
          }
        }
      }
    }

    &.gear-items-table > tbody {
      > tr:first-child > th {
        border-top-left-radius: var(--standard-border-radius);
        border-top-right-radius: var(--standard-border-radius);
      }

      > tr > th[col-id] {
        font-size: small;
        text-align: center;

        &[col-id='itemname'] {
          text-align: left;
        }
      }

      > tr > td {
        padding-left: 5px;
        padding-right: 5px;

        &[col-id='itemname'] {
          padding-left: 5px;
        }
      }
    }

    //Center wide stat columns
    //th.stat-col {
    //  &.chance-stat-col, &.multiplier-stat-col {
    //    text-align: center;
    //  }
    //}

  }

  --border-color-input: #0000;
  --tiering-color-mix: 5%;

  &.light-mode {
    --bg-color: #e5dad7;
    --button-hover-color: #ddb581;
  }

  &:not(.light-mode) {
    --table-bg-color: #24242c;
    --button-color: var(--table-bg-color);
  }

  .stat-cell {
    //border-radius: 2px;
  }

  .gear-sheet-midbar-area {
    background-color: var(--button-color);

    button, select {
      --button-color: var(--bg-color);
    }

    input {
      background: var(--bg-color) !important;
      border: none !important;
    }
  }

  gear-set-editor {
    table all-slot-materia-manager {
      padding-top: 5px;
    }
  }

  materia-dragger:hover {
    --stat-mix-secondary-bg: 20%;
  }

  .modal-dialog .modal-inner {
    background-color: var(--bg-color);
  }

  div#main-menu-area {
    background: none;
    box-shadow: none;

    div#main-menu-area-inner {
      .shadow;
      width: fit-content;
      display: flex;
      align-items: baseline;
      margin-left: auto;
      margin-right: auto;
      background-color: var(--table-bg-color);
      --mmai-border-radius: 10px;
      border-bottom-left-radius: var(--mmai-border-radius);
      border-bottom-right-radius: var(--mmai-border-radius);
      padding-left: var(--mmai-border-radius);
      padding-right: var(--mmai-border-radius);

      .svg-glyph {
        //height: 1.3em;
        //width: 1.3em;
        scale: 1.5;
        padding-right: 5px;

        &:only-child {
          padding-right: 0;
        }

        &.svg-bigger {
          scale: 2.0;
        }
      }

    }
  }

  .gear-sheet-table-holder-outer {
    padding: 10px 5px;
    border-radius: 10px;
    margin: 5px;
    background-color: var(--table-bg-color);
    .shadow;

    .gear-sheet-table-holder {
    }
  }

  .gear-sheet-table-area {
    margin-bottom: 5px;
  }

  button#show-hide-menu-button {
    .shadow;
  }

  .gear-sheet-buttons-area > * {
    height: 25px;
    padding-left: 10px;
    padding-right: 10px;
  }

  slot-materia-popup {
    border-radius: 10px;
    overflow: hidden;
  }

  div.gear-set-editor-toolbar > * {
    box-shadow: none;
    padding-left: 5px;
    padding-right: 5px;
  }

  set-view-toolbar {
    set-totals-display {
      div.stat-total {
        background-color: color-mix(in srgb, var(--stat-color) 6%, var(--table-bg-color));
        padding-left: 6px;
        padding-right: 6px;
        margin-left: 4px;
        margin-right: 4px;
        box-sizing: content-box;
      }
    }
  }

  .gear-set-editor-toolbar {
    .single-stat-tier-display {
      background-color: color-mix(in srgb, var(--stat-color) 5%, var(--table-bg-color));

      box-sizing: border-box;
      padding: 4px;
      height: var(--toolbar-button-size);
      border-radius: var(--toolbar-border-radius);

      &.stat-tiering-perfect {
        background-color: color-mix(in srgb, var(--stat-color) 13%, var(--table-bg-color));
      }
    }
  }

  .gear-set-editor-toolbar .toolbar-buttons-area .popout-area {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }
}

// This is intentionally not style differently based on enabled/disabled status, since it is frequently used
// for things that are A/B choices without a clear 'true/false' mapping.
bool-toggle {
  display: block;
  user-select: none;
  //border: 1px orange solid;
  box-sizing: border-box;

  --bool-toggle-inset: 10px;
  --border-radius: 15px;

  margin: 20px;

  width: 200px;
  height: 60px;

  input {
    display: none;
  }

  --bool-toggle-bg-color: var(--button-color);
  --bool-toggle-slider-bg-color: var(--bg-color);

  .bool-toggle-label {
    display: block;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    background-color: var(--bool-toggle-bg-color);
    border-radius: calc(var(--border-radius) + var(--bool-toggle-inset));
    border: var(--standard-border);
  }

  .bool-toggle-inner {
    position: relative;
    left: var(--bool-toggle-inset);
    top: var(--bool-toggle-inset);
    width: calc(100% - 2 * var(--bool-toggle-inset));
    height: calc(100% - 2 * var(--bool-toggle-inset));
    box-sizing: border-box;
  }

  .bool-toggle-slider {
    width: calc(50% - var(--bool-toggle-inset));
    height: 100%;
    position: absolute;
    left: 0;
    transition: left 0.2s ease;
    border-radius: var(--border-radius);
    box-sizing: border-box;
    background-color: var(--bool-toggle-slider-bg-color);
    border: var(--standard-border);
  }

  .bool-toggle-left, .bool-toggle-right {
    position: absolute;
    text-align: center;
    width: calc(50% - var(--bool-toggle-inset));
    height: 100%;

    display: flex;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;
  }

  .bool-toggle-left {
    left: 0;
  }

  .bool-toggle-right {
    right: 0;
  }

  &:has(input:checked) {
    .bool-toggle-slider {
      left: calc(50% + var(--bool-toggle-inset));
    }
  }

  &:hover {
    --bool-toggle-bg-color: var(--button-hover-color);
  }

  &:active {
    --bool-toggle-bg-color: var(--button-active-background-color);
  }
}

svg.gear-set-warning-icon {
  fill: var(--issue-warning-color);
  margin-right: 5px;
}

svg.gear-set-error-icon {
  fill: var(--issue-error-color);
  margin-right: 5px;
}

gear-set-issues-modal {

  &.has-issues {
    .modal-content-area {
      text-align: left;
    }
  }

  .modal-inner {
    width: 400px;

    .modal-content-area {
      .gear-set-issue-block {
        display: flex;
        margin: 25px;

        > span {
          flex-basis: fit-content;
        }

        > svg {
          margin-right: 10px;
          flex-shrink: 0;
          width: 18px;
          height: 18px;
        }
      }
    }
  }
}

.named-section {
  box-sizing: border-box;
  display: flex;
  flex-direction: column;

  > h3 {
    margin-top: 0;
    margin-bottom: 18px;
  }
}

.named-section-standard {
  max-height: calc(100% - 50px);
  max-width: calc(100% - 50px);
  background-color: var(--table-bg-color);
  .shadow-big;
  margin: 20px auto 20px auto;
  width: fit-content;
  height: fit-content;
  padding: 20px;
  border-radius: 10px;

  .named-section-content-area {
    max-width: 100%;
    overflow: auto;
  }

}

.invert-input-colors {
  --button-color: var(--bg-color);

  input, textarea {
    background-color: var(--bg-color);
  }
}

#content-area > .named-section {
  .named-section-standard;
  .top-level-widget;
}

.top-level-widget {
  border-radius: 10px;
  .shadow-big;
  background-color: var(--table-bg-color);
  .invert-input-colors;
  max-width: calc(100% - 50px);
  margin: 20px auto 20px auto;

}

.sim-basic-result-table {
  .round-table;
  .shadow-big;
}

alt-items-modal {
  .modal-content-area {
    width: min-content;
    max-width: 100%;
  }

  table {
    width: max-content;

    tr {
      td, th {
        padding-left: 15px;
        padding-right: 15px;
      }

      *[col-id="icon"] {
        height: 25px;
        width: 23px;
        min-width: 23px;
        max-width: 23px;
        padding-right: 0;

        img {
          height: 100%;
        }
      }

      *[col-id="itemname"] {
        padding-left: 0;
      }
    }
  }
}

.formula-top-level {
  .named-section-standard;
  .invert-input-colors;
}

math-area {
  .formula-selector-area {
    button {
      margin: 3px;

      &.active {
        background-color: var(--button-hover-color);
      }
    }
  }

  .settings-area {
    .generic-settings-area, .specific-settings-area {
      .vertical-labeled-input {
        padding: 10px;
        display: inline-block;

        input {
          width: 100px;
        }

        > * {
          display: block;
        }
      }
    }
  }
}

button[disabled] {
  pointer-events: none;
  opacity: 50%;
}